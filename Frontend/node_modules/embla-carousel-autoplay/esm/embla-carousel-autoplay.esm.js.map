{"version":3,"file":"embla-carousel-autoplay.esm.js","sources":["../src/components/Options.ts","../src/components/Autoplay.ts"],"sourcesContent":["import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  delay: number\n  jump: boolean\n  playOnInit: boolean\n  stopOnFocusIn: boolean\n  stopOnInteraction: boolean\n  stopOnMouseEnter: boolean\n  stopOnLastSnap: boolean\n  rootNode: ((emblaRoot: HTMLElement) => HTMLElement | null) | null\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  delay: 4000,\n  jump: false,\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n  rootNode: null\n}\n","import { OptionsType, defaultOptions } from './Options'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport { OptionsHandlerType } from 'embla-carousel/components/OptionsHandler'\nimport { EmblaCarouselType } from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    autoplay?: AutoplayType\n  }\n}\n\ndeclare module 'embla-carousel/components/EventHandler' {\n  interface EmblaEventListType {\n    autoplayPlay: 'autoplay:play'\n    autoplayStop: 'autoplay:stop'\n  }\n}\n\nexport type AutoplayType = CreatePluginType<\n  {\n    play: (jump?: boolean) => void\n    stop: () => void\n    reset: () => void\n    isPlaying: () => boolean\n  },\n  OptionsType\n>\n\nexport type AutoplayOptionsType = AutoplayType['options']\n\nfunction Autoplay(userOptions: AutoplayOptionsType = {}): AutoplayType {\n  let options: OptionsType\n  let emblaApi: EmblaCarouselType\n  let destroyed: boolean\n  let playing = false\n  let resume = true\n  let jump = false\n  let timer = 0\n\n  function init(\n    emblaApiInstance: EmblaCarouselType,\n    optionsHandler: OptionsHandlerType\n  ): void {\n    emblaApi = emblaApiInstance\n\n    const { mergeOptions, optionsAtMedia } = optionsHandler\n    const optionsBase = mergeOptions(defaultOptions, Autoplay.globalOptions)\n    const allOptions = mergeOptions(optionsBase, userOptions)\n    options = optionsAtMedia(allOptions)\n\n    if (emblaApi.scrollSnapList().length <= 1) return\n\n    jump = options.jump\n    destroyed = false\n\n    const { eventStore, ownerDocument } = emblaApi.internalEngine()\n    const emblaRoot = emblaApi.rootNode()\n    const root = (options.rootNode && options.rootNode(emblaRoot)) || emblaRoot\n    const container = emblaApi.containerNode()\n\n    emblaApi.on('pointerDown', stopTimer)\n\n    if (!options.stopOnInteraction) {\n      emblaApi.on('pointerUp', startTimer)\n    }\n\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', () => {\n        resume = false\n        stopTimer()\n      })\n\n      if (!options.stopOnInteraction) {\n        eventStore.add(root, 'mouseleave', () => {\n          resume = true\n          startTimer()\n        })\n      }\n    }\n\n    if (options.stopOnFocusIn) {\n      eventStore.add(container, 'focusin', stopTimer)\n\n      if (!options.stopOnInteraction) {\n        eventStore.add(container, 'focusout', startTimer)\n      }\n    }\n\n    eventStore.add(ownerDocument, 'visibilitychange', visibilityChange)\n\n    if (options.playOnInit && !documentIsHidden()) startTimer()\n  }\n\n  function destroy(): void {\n    emblaApi.off('pointerDown', stopTimer).off('pointerUp', startTimer)\n    stopTimer()\n    destroyed = true\n    playing = false\n  }\n\n  function startTimer(): void {\n    if (destroyed) return\n    if (!resume) return\n    if (!playing) emblaApi.emit('autoplay:play')\n    const { ownerWindow } = emblaApi.internalEngine()\n    ownerWindow.clearInterval(timer)\n    timer = ownerWindow.setInterval(next, options.delay)\n    playing = true\n  }\n\n  function stopTimer(): void {\n    if (destroyed) return\n    if (playing) emblaApi.emit('autoplay:stop')\n    const { ownerWindow } = emblaApi.internalEngine()\n    ownerWindow.clearInterval(timer)\n    timer = 0\n    playing = false\n  }\n\n  function visibilityChange(): void {\n    if (documentIsHidden()) {\n      resume = playing\n      return stopTimer()\n    }\n\n    if (resume) startTimer()\n  }\n\n  function documentIsHidden(): boolean {\n    const { ownerDocument } = emblaApi.internalEngine()\n    return ownerDocument.visibilityState === 'hidden'\n  }\n\n  function play(jumpOverride?: boolean): void {\n    if (typeof jumpOverride !== 'undefined') jump = jumpOverride\n    resume = true\n    startTimer()\n  }\n\n  function stop(): void {\n    if (playing) stopTimer()\n  }\n\n  function reset(): void {\n    if (playing) play()\n  }\n\n  function isPlaying(): boolean {\n    return playing\n  }\n\n  function next(): void {\n    const { index } = emblaApi.internalEngine()\n    const nextIndex = index.clone().add(1).get()\n    const lastIndex = emblaApi.scrollSnapList().length - 1\n    const kill = options.stopOnLastSnap && nextIndex === lastIndex\n\n    if (kill) stopTimer()\n\n    if (emblaApi.canScrollNext()) {\n      emblaApi.scrollNext(jump)\n    } else {\n      emblaApi.scrollTo(0, jump)\n    }\n  }\n\n  const self: AutoplayType = {\n    name: 'autoplay',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  }\n  return self\n}\n\nAutoplay.globalOptions = <AutoplayOptionsType | undefined>undefined\n\nexport default Autoplay\n"],"names":["defaultOptions","active","breakpoints","delay","jump","playOnInit","stopOnFocusIn","stopOnInteraction","stopOnMouseEnter","stopOnLastSnap","rootNode","Autoplay","userOptions","options","emblaApi","destroyed","playing","resume","timer","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","globalOptions","allOptions","scrollSnapList","length","eventStore","ownerDocument","internalEngine","emblaRoot","root","container","containerNode","on","stopTimer","startTimer","add","visibilityChange","documentIsHidden","destroy","off","emit","ownerWindow","clearInterval","setInterval","next","visibilityState","play","jumpOverride","stop","reset","isPlaying","index","nextIndex","clone","get","lastIndex","kill","canScrollNext","scrollNext","scrollTo","self","name","undefined"],"mappings":"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"}